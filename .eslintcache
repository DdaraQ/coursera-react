[{"D:\\workspace\\workspace-react-coursera\\confusion\\src\\reportWebVitals.js":"1","D:\\workspace\\workspace-react-coursera\\confusion\\src\\index.js":"2","D:\\workspace\\workspace-react-coursera\\confusion\\src\\App.js":"3","D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\MenuComponent.js":"4","D:\\workspace\\workspace-react-coursera\\confusion\\src\\shared\\dishes.js":"5","D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\DishdetailComponent.js":"6","D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\MainComponent.js":"7","D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\HeaderComponent.js":"8","D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\FooterComponent.js":"9","D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\HomeComponent.js":"10","D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\ContactComponent.js":"11","D:\\workspace\\workspace-react-coursera\\confusion\\src\\shared\\comments.js":"12","D:\\workspace\\workspace-react-coursera\\confusion\\src\\shared\\leaders.js":"13","D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\AboutComponent.js":"14","D:\\workspace\\workspace-react-coursera\\confusion\\src\\shared\\promotions.js":"15"},{"size":362,"mtime":1610033123071,"results":"16","hashOfConfig":"17"},{"size":641,"mtime":1610275632137,"results":"18","hashOfConfig":"17"},{"size":245,"mtime":1610373135133,"results":"19","hashOfConfig":"17"},{"size":1639,"mtime":1610558333791,"results":"20","hashOfConfig":"17"},{"size":1490,"mtime":1610549209292,"results":"21","hashOfConfig":"17"},{"size":2452,"mtime":1610558313480,"results":"22","hashOfConfig":"17"},{"size":2254,"mtime":1610843324294,"results":"23","hashOfConfig":"17"},{"size":3147,"mtime":1610544398918,"results":"24","hashOfConfig":"17"},{"size":2824,"mtime":1610544744505,"results":"25","hashOfConfig":"17"},{"size":1117,"mtime":1610551915204,"results":"26","hashOfConfig":"17"},{"size":7820,"mtime":1611109484968,"results":"27","hashOfConfig":"17"},{"size":4279,"mtime":1610549282558,"results":"28","hashOfConfig":"17"},{"size":2382,"mtime":1610549274616,"results":"29","hashOfConfig":"17"},{"size":4348,"mtime":1610950103650,"results":"30","hashOfConfig":"17"},{"size":445,"mtime":1610549266926,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"14y17g4",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"45"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\workspace\\workspace-react-coursera\\confusion\\src\\reportWebVitals.js",[],["68","69"],"D:\\workspace\\workspace-react-coursera\\confusion\\src\\index.js",[],["70","71"],"D:\\workspace\\workspace-react-coursera\\confusion\\src\\App.js",[],"D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\MenuComponent.js",["72","73","74","75","76"],"import React, { Component } from \"react\";\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DISHES } from \"../shared/dishes\";\r\nimport Dishdetail from \"./DishdetailComponent\";\r\n\r\n\r\nfunction RenderMenuItem({ dish, onClick }) {\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >                        \r\n                <CardImg width=\"100%\" object src={dish.image} alt={dish.name} />                        \r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n\r\n    const menu = props.dishes.map((dish) => {\r\n        return (\r\n            <div key={dish.id} className=\"col-12 col-xs-12 col-sm-12 col-md-5 m-1\">\r\n                <RenderMenuItem dish={dish} />\r\n            </div>\r\n        );\r\n    });\r\n    console.log('Menu Component render is invoked');\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>Menu</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                {menu}\r\n            </div>     \r\n        </div>        \r\n    );\r\n}\r\n\r\nexport default Menu;","D:\\workspace\\workspace-react-coursera\\confusion\\src\\shared\\dishes.js",[],["77","78"],"D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\DishdetailComponent.js",["79"],"import { Component } from \"react\";\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction RenderDish({dish}) {\r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <Card>\r\n                <CardImg width=\"100%\" object src={dish.image} alt={dish.name} />\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RenderComments({comments}) {      \r\n    if (comments != null) {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\">\r\n                <h4>Comments</h4>\r\n                <ul className=\"list-unstyled\">\r\n                    {comments.map((comment) => {\r\n                        return (\r\n                            <li key={comment.id}>\r\n                                <p>{comment.comment}</p>\r\n                                <p>-- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        );        \r\n    } else {\r\n        return (\r\n            <div></div>  \r\n        );\r\n    }        \r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    if (props.dish != null)\r\n        return (\r\n            <div className=\"container\"> \r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to='/menu'>Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>           \r\n                <div className=\"row\">                                        \r\n                    <RenderDish dish={props.dish} />                 \r\n                    <RenderComments comments={props.comments} />                        \r\n                </div>  \r\n            </div>          \r\n        );\r\n    else\r\n        return (\r\n            <div></div>\r\n        );\r\n};\r\n\r\nexport default DishDetail;","D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\MainComponent.js",[],"D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\HeaderComponent.js",["80"],"import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavBarToggler, Collapse, NavItem, Jumbotron, NavbarToggler } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-home fa-lg\"></span> Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse >\r\n                        \r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristornate Con Fusion</h1>\r\n                                <p>We take inspiration from the world's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\FooterComponent.js",[],"D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\HomeComponent.js",[],"D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\ContactComponent.js",["81"],"D:\\workspace\\workspace-react-coursera\\confusion\\src\\shared\\comments.js",[],"D:\\workspace\\workspace-react-coursera\\confusion\\src\\shared\\leaders.js",[],"D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\AboutComponent.js",[],"D:\\workspace\\workspace-react-coursera\\confusion\\src\\shared\\promotions.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"82","replacedBy":"86"},{"ruleId":"84","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":26},{"ruleId":"88","severity":1,"message":"92","line":2,"column":41,"nodeType":"90","messageId":"91","endLine":2,"endColumn":49},{"ruleId":"88","severity":1,"message":"93","line":2,"column":51,"nodeType":"90","messageId":"91","endLine":2,"endColumn":59},{"ruleId":"88","severity":1,"message":"94","line":4,"column":10,"nodeType":"90","messageId":"91","endLine":4,"endColumn":16},{"ruleId":"88","severity":1,"message":"95","line":5,"column":8,"nodeType":"90","messageId":"91","endLine":5,"endColumn":18},{"ruleId":"82","replacedBy":"96"},{"ruleId":"84","replacedBy":"97"},{"ruleId":"88","severity":1,"message":"89","line":1,"column":10,"nodeType":"90","messageId":"91","endLine":1,"endColumn":19},{"ruleId":"88","severity":1,"message":"98","line":2,"column":36,"nodeType":"90","messageId":"91","endLine":2,"endColumn":49},{"ruleId":"99","severity":1,"message":"100","line":73,"column":29,"nodeType":"101","endLine":73,"endColumn":71},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],["102"],["103"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'CardText' is defined but never used.","'CardBody' is defined but never used.","'DISHES' is defined but never used.","'Dishdetail' is defined but never used.",["102"],["103"],"'NavBarToggler' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]