[{"D:\\workspace\\workspace-react-coursera\\confusion\\src\\reportWebVitals.js":"1","D:\\workspace\\workspace-react-coursera\\confusion\\src\\index.js":"2","D:\\workspace\\workspace-react-coursera\\confusion\\src\\App.js":"3","D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\MenuComponent.js":"4","D:\\workspace\\workspace-react-coursera\\confusion\\src\\shared\\dishes.js":"5","D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\DishdetailComponent.js":"6","D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\MainComponent.js":"7","D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\HeaderComponent.js":"8","D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\FooterComponent.js":"9","D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\HomeComponent.js":"10","D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\ContactComponent.js":"11","D:\\workspace\\workspace-react-coursera\\confusion\\src\\shared\\comments.js":"12","D:\\workspace\\workspace-react-coursera\\confusion\\src\\shared\\leaders.js":"13","D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\AboutComponent.js":"14","D:\\workspace\\workspace-react-coursera\\confusion\\src\\shared\\promotions.js":"15","D:\\workspace\\workspace-react-coursera\\confusion\\src\\redux\\leaders.js":"16","D:\\workspace\\workspace-react-coursera\\confusion\\src\\redux\\configureStore.js":"17"},{"size":362,"mtime":1610033123071,"results":"18","hashOfConfig":"19"},{"size":641,"mtime":1610275632137,"results":"20","hashOfConfig":"19"},{"size":245,"mtime":1610373135133,"results":"21","hashOfConfig":"19"},{"size":1639,"mtime":1610558333791,"results":"22","hashOfConfig":"19"},{"size":1490,"mtime":1610549209292,"results":"23","hashOfConfig":"19"},{"size":6670,"mtime":1611590679925,"results":"24","hashOfConfig":"19"},{"size":2193,"mtime":1611539514268,"results":"25","hashOfConfig":"19"},{"size":5579,"mtime":1611227504485,"results":"26","hashOfConfig":"19"},{"size":2824,"mtime":1610544744505,"results":"27","hashOfConfig":"19"},{"size":1117,"mtime":1610551915204,"results":"28","hashOfConfig":"19"},{"size":10759,"mtime":1611553182023,"results":"29","hashOfConfig":"19"},{"size":4279,"mtime":1610549282558,"results":"30","hashOfConfig":"19"},{"size":2382,"mtime":1610549274616,"results":"31","hashOfConfig":"19"},{"size":4348,"mtime":1610950103650,"results":"32","hashOfConfig":"19"},{"size":445,"mtime":1610549266926,"results":"33","hashOfConfig":"19"},{"size":184,"mtime":1611630246092,"results":"34","hashOfConfig":"19"},{"size":485,"mtime":1611630551540,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"14y17g4",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"41"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\workspace\\workspace-react-coursera\\confusion\\src\\reportWebVitals.js",[],["77","78"],"D:\\workspace\\workspace-react-coursera\\confusion\\src\\index.js",[],["79","80"],"D:\\workspace\\workspace-react-coursera\\confusion\\src\\App.js",[],"D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\MenuComponent.js",["81","82","83","84","85"],"import React, { Component } from \"react\";\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody, CardTitle, Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DISHES } from \"../shared/dishes\";\r\nimport Dishdetail from \"./DishdetailComponent\";\r\n\r\n\r\nfunction RenderMenuItem({ dish, onClick }) {\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >                        \r\n                <CardImg width=\"100%\" object src={dish.image} alt={dish.name} />                        \r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n\r\n    const menu = props.dishes.map((dish) => {\r\n        return (\r\n            <div key={dish.id} className=\"col-12 col-xs-12 col-sm-12 col-md-5 m-1\">\r\n                <RenderMenuItem dish={dish} />\r\n            </div>\r\n        );\r\n    });\r\n    console.log('Menu Component render is invoked');\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to='/home'>Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>Menu</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                {menu}\r\n            </div>     \r\n        </div>        \r\n    );\r\n}\r\n\r\nexport default Menu;",["86","87"],"D:\\workspace\\workspace-react-coursera\\confusion\\src\\shared\\dishes.js",[],["88","89"],"D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\DishdetailComponent.js",["90","91","92","93","94","95","96"],"D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\MainComponent.js",["97"],"D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\HeaderComponent.js",["98"],"import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavBarToggler, Collapse, NavItem, Jumbotron, NavbarToggler, Button, Modal, ModalHeader, ModalBody, Label, FormGroup, Input, Form } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username : \" + this.username.value + \" Password : \" + this.password.value + \" Remember : \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-home fa-lg\"></span> Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse >\r\n                        \r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristornate Con Fusion</h1>\r\n                                <p>We take inspiration from the world's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\" innerRef={(input) => this.username = input} />                                \r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\" innerRef={(input) => this.password = input} />                                \r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\" innerRef={(input) => this.remember = input} />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" className=\"bg-primary\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\FooterComponent.js",[],"D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\HomeComponent.js",[],["99","100"],"D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\ContactComponent.js",["101","102","103","104","105","106","107","108","109","110","111","112"],"D:\\workspace\\workspace-react-coursera\\confusion\\src\\shared\\comments.js",[],"D:\\workspace\\workspace-react-coursera\\confusion\\src\\shared\\leaders.js",[],"D:\\workspace\\workspace-react-coursera\\confusion\\src\\components\\AboutComponent.js",[],"D:\\workspace\\workspace-react-coursera\\confusion\\src\\shared\\promotions.js",[],"D:\\workspace\\workspace-react-coursera\\confusion\\src\\redux\\leaders.js",[],"D:\\workspace\\workspace-react-coursera\\confusion\\src\\redux\\configureStore.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"113","replacedBy":"117"},{"ruleId":"115","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":26},{"ruleId":"119","severity":1,"message":"123","line":2,"column":41,"nodeType":"121","messageId":"122","endLine":2,"endColumn":49},{"ruleId":"119","severity":1,"message":"124","line":2,"column":51,"nodeType":"121","messageId":"122","endLine":2,"endColumn":59},{"ruleId":"119","severity":1,"message":"125","line":4,"column":10,"nodeType":"121","messageId":"122","endLine":4,"endColumn":16},{"ruleId":"119","severity":1,"message":"126","line":5,"column":8,"nodeType":"121","messageId":"122","endLine":5,"endColumn":18},{"ruleId":"113","replacedBy":"127"},{"ruleId":"115","replacedBy":"128"},{"ruleId":"113","replacedBy":"129"},{"ruleId":"115","replacedBy":"130"},{"ruleId":"119","severity":1,"message":"131","line":2,"column":123,"nodeType":"121","messageId":"122","endLine":2,"endColumn":127},{"ruleId":"119","severity":1,"message":"132","line":2,"column":129,"nodeType":"121","messageId":"122","endLine":2,"endColumn":138},{"ruleId":"119","severity":1,"message":"133","line":2,"column":147,"nodeType":"121","messageId":"122","endLine":2,"endColumn":152},{"ruleId":"134","severity":1,"message":"135","line":45,"column":33,"nodeType":"136","endLine":45,"endColumn":116},{"ruleId":"134","severity":1,"message":"137","line":57,"column":33,"nodeType":"136","endLine":62,"endColumn":42},{"ruleId":"134","severity":1,"message":"138","line":78,"column":33,"nodeType":"136","endLine":78,"endColumn":132},{"ruleId":"119","severity":1,"message":"139","line":133,"column":10,"nodeType":"121","messageId":"122","endLine":133,"endColumn":14},{"ruleId":"140","severity":1,"message":"141","line":23,"column":5,"nodeType":"142","messageId":"143","endLine":25,"endColumn":6},{"ruleId":"119","severity":1,"message":"144","line":2,"column":36,"nodeType":"121","messageId":"122","endLine":2,"endColumn":49},{"ruleId":"113","replacedBy":"145"},{"ruleId":"115","replacedBy":"146"},{"ruleId":"119","severity":1,"message":"131","line":2,"column":46,"nodeType":"121","messageId":"122","endLine":2,"endColumn":50},{"ruleId":"119","severity":1,"message":"132","line":2,"column":52,"nodeType":"121","messageId":"122","endLine":2,"endColumn":61},{"ruleId":"119","severity":1,"message":"133","line":2,"column":70,"nodeType":"121","messageId":"122","endLine":2,"endColumn":75},{"ruleId":"119","severity":1,"message":"147","line":2,"column":87,"nodeType":"121","messageId":"122","endLine":2,"endColumn":99},{"ruleId":"148","severity":1,"message":"149","line":59,"column":29,"nodeType":"136","endLine":59,"endColumn":71},{"ruleId":"134","severity":1,"message":"137","line":73,"column":37,"nodeType":"136","endLine":78,"endColumn":46},{"ruleId":"134","severity":1,"message":"137","line":94,"column":37,"nodeType":"136","endLine":99,"endColumn":46},{"ruleId":"134","severity":1,"message":"137","line":115,"column":37,"nodeType":"136","endLine":120,"endColumn":46},{"ruleId":"134","severity":1,"message":"137","line":137,"column":37,"nodeType":"136","endLine":142,"endColumn":46},{"ruleId":"134","severity":1,"message":"150","line":158,"column":45,"nodeType":"136","endLine":159,"endColumn":80},{"ruleId":"134","severity":1,"message":"135","line":165,"column":37,"nodeType":"136","endLine":166,"endColumn":67},{"ruleId":"134","severity":1,"message":"138","line":175,"column":37,"nodeType":"136","endLine":177,"endColumn":68},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],["151"],["152"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'CardText' is defined but never used.","'CardBody' is defined but never used.","'DISHES' is defined but never used.","'Dishdetail' is defined but never used.",["151"],["152"],["151"],["152"],"'Form' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'name' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'NavBarToggler' is defined but never used.",["151"],["152"],"'FormFeedback' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]